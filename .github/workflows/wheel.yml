name: Build, Test & Publish to PyPI

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*' # Alternative: only build for tags.
  #pull_request:

jobs:
  build_wheels:
    name: Build wheels for cp${{ matrix.python }}-${{ matrix.platform_id }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # linux-64
          - os: ubuntu-latest
            python: 39
            platform_id: manylinux_x86_64
          - os: ubuntu-latest
            python: 310
            platform_id: manylinux_x86_64
          - os: ubuntu-latest
            python: 311
            platform_id: manylinux_x86_64
          - os: ubuntu-latest
            python: 312
            platform_id: manylinux_x86_64
          - os: ubuntu-latest
            python: 313
            platform_id: manylinux_x86_64
          - os: ubuntu-latest
            python: 313t
            platform_id: manylinux_x86_64
            cibw_enable: cpython-freethreading
          # linux-aarch64
          - os: ubuntu-24.04-arm
            python: 39
            platform_id: manylinux_aarch64
          - os: ubuntu-24.04-arm
            python: 310
            platform_id: manylinux_aarch64
          - os: ubuntu-24.04-arm
            python: 311
            platform_id: manylinux_aarch64
          - os: ubuntu-24.04-arm
            python: 312
            platform_id: manylinux_aarch64
          - os: ubuntu-24.04-arm
            python: 313
            platform_id: manylinux_aarch64
          - os: ubuntu-24.04-arm
            python: 313t
            platform_id: manylinux_aarch64
            cibw_enable: cpython-freethreading
          # macos-x86-64
          - os: macos-13
            python: 39
            macos_target: 13
            platform_id: macosx_x86_64
          - os: macos-13
            python: 310
            macos_target: 13
            platform_id: macosx_x86_64
          - os: macos-13
            python: 311
            macos_target: 13
            platform_id: macosx_x86_64
          - os: macos-13
            python: 312
            macos_target: 13
            platform_id: macosx_x86_64
          - os: macos-13
            python: 313
            macos_target: 13
            platform_id: macosx_x86_64
          - os: macos-13
            python: 313t
            macos_target: 13
            platform_id: macosx_x86_64
            cibw_enable: cpython-freethreading
          # macos-arm64
          - os: macos-latest
            python: 39
            macos_target: 14
            platform_id: macosx_arm64
          - os: macos-latest
            python: 310
            macos_target: 14
            platform_id: macosx_arm64
          - os: macos-latest
            python: 311
            macos_target: 14
            platform_id: macosx_arm64
          - os: macos-latest
            python: 312
            macos_target: 14
            platform_id: macosx_arm64
          - os: macos-latest
            python: 313
            macos_target: 14
            platform_id: macosx_arm64
          - os: macos-latest
            python: 313t
            macos_target: 14
            platform_id: macosx_arm64
            cibw_enable: cpython-freethreading
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - uses: pypa/cibuildwheel@v3.1.1
        env:
          CIBW_ENABLE: ${{ matrix.cibw_enable }}
          CIBW_ARCHS: all
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_ALL_LINUX: "yum install -y openblas-devel"
          CIBW_BEFORE_ALL_MACOS: "brew install openblas gfortran"
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.macos_target }}.0
      - run: ls -l wheelhouse/*
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_wheels_for_cp39-windows:
    name: Build wheels for cp39-windows
    runs-on: windows-latest
    steps:
      - name: Provide gfortran (Windows)
        # https://github.com/actions/runner-images/discussions/7998
        uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows'
        id: msys2
        with:
          update: true
          cache: true
          path-type: inherit
          install: >-
            mingw-w64-x86_64-openblas
            mingw-w64-x86_64-gcc-fortran
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Build wheels (Windows)
        run: |
          uv python pin cpython39
          uv build --wheel
          ls -l dist/*
          pipx run delvewheel repair dist/*.whl -vv
          ls -l wheelhouse/*
        shell: msys2 {0}
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-cp39-win_amd64
          path: ./wheelhouse/*.whl

  build_wheels_for_cp310-windows:
    name: Build wheels for cp310-windows
    runs-on: windows-latest
    steps:
      - name: Provide gfortran (Windows)
        # https://github.com/actions/runner-images/discussions/7998
        uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows'
        id: msys2
        with:
          update: true
          cache: true
          path-type: inherit
          install: >-
            mingw-w64-x86_64-openblas
            mingw-w64-x86_64-gcc-fortran
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Build wheels (Windows)
        run: |
          uv python pin cpython310
          uv build --wheel
          ls -l dist/*
          pipx run delvewheel repair dist/*.whl -vv
          ls -l wheelhouse/*
        shell: msys2 {0}
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-cp310-win_amd64
          path: ./wheelhouse/*.whl

  build_wheels_for_cp311-windows:
    name: Build wheels for cp311-windows
    runs-on: windows-latest
    steps:
      - name: Provide gfortran (Windows)
        # https://github.com/actions/runner-images/discussions/7998
        uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows'
        id: msys2
        with:
          update: true
          cache: true
          path-type: inherit
          install: >-
            mingw-w64-x86_64-openblas
            mingw-w64-x86_64-gcc-fortran
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Build wheels (Windows)
        run: |
          uv python pin cpython311
          uv build --wheel
          ls -l dist/*
          pipx run delvewheel repair dist/*.whl -vv
          ls -l wheelhouse/*
        shell: msys2 {0}
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-cp311-win_amd64
          path: ./wheelhouse/*.whl

  build_wheels_for_cp312-windows:
    name: Build wheels for cp312-windows
    runs-on: windows-latest
    steps:
      - name: Provide gfortran (Windows)
        # https://github.com/actions/runner-images/discussions/7998
        uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows'
        id: msys2
        with:
          update: true
          cache: true
          path-type: inherit
          install: >-
            mingw-w64-x86_64-openblas
            mingw-w64-x86_64-gcc-fortran
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Build wheels (Windows)
        run: |
          uv python pin cpython312
          uv build --wheel
          ls -l dist/*
          pipx run delvewheel repair dist/*.whl -vv
          ls -l wheelhouse/*
        shell: msys2 {0}
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-cp312-win_amd64
          path: ./wheelhouse/*.whl

  build_wheels_for_cp313-windows:
    name: Build wheels for cp313-windows
    runs-on: windows-latest
    steps:
      - name: Provide gfortran (Windows)
        # https://github.com/actions/runner-images/discussions/7998
        uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows'
        id: msys2
        with:
          update: true
          cache: true
          path-type: inherit
          install: >-
            mingw-w64-x86_64-openblas
            mingw-w64-x86_64-gcc-fortran
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Build wheels (Windows)
        run: |
          uv python pin cpython313
          uv build --wheel
          ls -l dist/*
          pipx run delvewheel repair dist/*.whl -vv
          ls -l wheelhouse/*
        shell: msys2 {0}
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-cp313-win_amd64
          path: ./wheelhouse/*.whl

  build_wheels_for_cp313t-windows:
    name: Build wheels for cp313t-windows
    runs-on: windows-latest
    steps:
      - name: Provide gfortran (Windows)
        # https://github.com/actions/runner-images/discussions/7998
        uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows'
        id: msys2
        with:
          update: true
          cache: true
          path-type: inherit
          install: >-
            mingw-w64-x86_64-openblas
            mingw-w64-x86_64-gcc-fortran
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - name: Build wheels (Windows)
        run: |
          uv python pin cpython313t
          uv build --wheel
          ls -l dist/*
          pipx run delvewheel repair dist/*.whl -vv
          ls -l wheelhouse/*
        shell: msys2 {0}
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-cp313t-win_amd64
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        run: pipx run build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs:
      - build_wheels
      - build_sdist
      - build_wheels_for_cp313t-windows
      - build_wheels_for_cp313-windows
      - build_wheels_for_cp312-windows
      - build_wheels_for_cp311-windows
      - build_wheels_for_cp310-windows
      - build_wheels_for_cp39-windows
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    permissions:
        # IMPORTANT: this permission is mandatory for trusted publishing
        id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@release/v1